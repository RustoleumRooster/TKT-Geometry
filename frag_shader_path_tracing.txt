uniform int nTriangles;
uniform vec3 vertices[300];
uniform vec3 normals[100];

uniform int nLights;
uniform vec3 LightPos[3];
uniform int LightRadius[3];

varying vec3 v;

void main (void)
{
    	vec2 pos = vec2(gl_TexCoord[0]));
	vec4 col(1.0,1.0,1.0,1.0);

	float light=0.0;

	for(int i=0; i<nLights; i++)
	{
    		vec3 r = (v-LightPos[i]);
    		float d = length(r);

		if(d>LightRadius[i])
		{
			light += 0;
		}
		else
		{
			d = 1 - (d / LightRadius[i]);
			d = d*d;
        		light += d;
		}
	}

	clamp(light,0,1);

    	gl_FragColor = col * light;
}
